-0- general
-1- CSI codes
	-1.1- cursor motion
	-1.2- colors
	-1.3- Modifying display
-2- DEC codes
-3- OSC codes


------------------------------
-0- general
------------------------------
ansi escape sequences are special character sequences that can be
written to a terminal to achieve certain effects like moving the cursor
supported by most terminals.

The general form is CSI arg code

CSI = '\e[' or '\033[' or '\x1b['
(ascii escape character, followed by left square bracket.)

In general, these controls are independent of the text that is displayed
in the terminal.  (Moving up is NOT moving backwards in the text, but rather
just moving to a different (x,y) coordinate in the window.)


------------------------------
-1- CSI codes
------------------------------
	------------------------------
	-1.1- cursor motion
	------------------------------
		code    abbr        description
		nA      CUU         move up n(1) lines
		nB      CUD         move down n(1) lines
		nC      CUF         move forward n(1) columns
		nD      CUB         move back n(1) columns
		nE      CNL         move down n(1) lines + to front
		nF      CPL         move up n(1) lines + to front
		nG      CHA         move to nth(1) column (1-indexed)
		r;cH    CUP         move to given row(1);column(1) position (1-indexed)


	private sequences
		s       SCP SCOSC   save cursor position (absolute position)
		u       rcp SCORC   restore cursor position

		These are no-ops if at the edge of the screen.

	------------------------------
	-1.2- colors
	------------------------------
	'\033[f;bm'
	where f = foreground (text) and b = background (highlighting)

	f     b       color
	30    40      black
	31    41      red
	32    42      green
	33    43      yellow
	34    44      blue
	35    45      magenta
	36    46      cyan
	37    47      white
	90    100
	91    101
	92    102     same as above
	93    103     30-37/40-47, except
	94    104     add "bright"
	95    105
	96    106
	97    107
	0             Reset settings.

	------------------------------
	-1.3- Modifying display
	------------------------------
	nJ    ED  erase in display
	          0: cursor to end of screen
	          1: cursor to beginning of screen
	          2: all screen
	          3: all screen + scrollback buffer
	          NOTE: not necessarily...
	          In cygwin, 3 just deleted scrollback buffer above the current display
	          2 only adds new lines to make the screen blank (prints "$(tput lines)" newlines)

	nK    EL  erase in line
	          0: cursor to end of line
	          1: cursor to beginning of line
	          2: whole line

	nS    SU  scroll text up (only text currently displayed in the screen. Delete data that goes off screen)
	nT    SD  scroll text down (only text currently displayed in the screen. Delete data that goes off screen)

------------------------------
-2- DEC codes
------------------------------
	These are prefixed with $'\e'
	and then a byte in 0x30-0x3F

	7     save position+attrs etc
	8     restore position/attrs etc

	These are ?more widely supported?

------------------------------
-3- OSC codes
------------------------------
These are codes prefixed with
ST is "String Terminator", for xterm, it is the bell character

\033] num; txt ST

ex:
PS1 \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$

This part:
	\[\e]0;\u@\h: \w\a\]
	Sets the window name of the terminal to 
	username@host: workingdir

codes:
	0;txt     set icon name and window title
	1;txt     set icon name (?mouse over tooltip text?)
	2;txt     set window title to txt
	4;num;txt set ANSI color num to txt
	10;txt    Set dynamic text color to txt
	4 6;name  change logfile to name
	5 0;fn    set font to fn
