https://www.linux.com/learn/vim-101-beginners-guide-vim
NOTE: cygwin vi uses .virc not .vimrc

##############################
#contents
##############################
1::vim
  1.1::general
    1.1.1::indentation
  1.2::modes
    1.2.1::command (normal mode)
      1.2.1.1::movement
        1.2.1.1.1::marks
      1.2.1.2::editing
      1.2.1.3::search/replace
      1.2.1.4::file manipulation
      1.2.1.5::window manipulation
      1.2.1.6::other
    1.2.2::insert
      1.2.2.1::controls
    1.2.3::last-line(command line mode)
      1.2.3.1::file manipulation
      1.2.3.2::window manipulation
      1.2.3.3::editing
      1.2.3.4::other
  1.3::config file
  1.4::functions

##############################
#1::vim
##############################
#1.1::general
______________________________
#1.3::config file
  /etc/vim/vimrc
  ~/.vimrc
  /usr/share/vim/.vimrc
  ex:
    " .vimrc - startup file for Vim

      syntax on
     set viminfo='1000,f1,\"500,:100,/100
     set mouse=a
     autocmd FileType html,xml,xsl source ~/.vim/scripts/closetag.vim 

  options/syntax
    " blahblah       : a comment
    set value        : set the value
      NOTE:
        in general, add "no" in front to toggle off, ie number, nonumber
      viminfo        : store history length for vim (session info persists between sessions)
      mouse=a        : enable mouse everywhere
      scrolloff=n    : keep at least n lines from top and bottom of the screen
                       within limitations (ie, set n=999 and if less than 999 lines on a screen,
                       cursor will always be centered)
      number         : line numbering
      relativenumber : display relative numbering
      autoindent     : inherit indent from previous lines
      expandtab      : tabs->spaces
      shiftwidth=N   : shift by N (also autoindent)
      tabstop=N      : width of a TAB character
      softtabstop=N  : if expandtab, softtabstop = shiftwidth is desired
                       space to be inserted (tabstop = 8, softtabstop = 20
                           noexpandtab)=>2 tabs, 4 spaces
      ignorecase     : ignore case when searching
      incsearch      : search shows partial matches
      smartcase      : automatically switch to case sensitive when query has caps
      wrap           : line wrapping

      title          : set window title (file being edited)
      hlsearch       : highlight search

    syntax on        : turn on syntax highlighting
  ______________________________
  key mapping
  {cmd} {attr} {lhs} {rhs}
  cmd: prefix/suffix followed by a mapping command
    values:
      X   X!    nX    iX    vX    sX    xX    cX    oX
  
    X: one of the following
      map     : makes a mapping(default is recursive)
      remap   : recursive map (use mappings defined before)
      noremap : nonrecursive map: don't use previously defined mappings
      unmap   : remove map
      mapclear: clear all maps

  attr: optional, one of: enclosed in <>
      buffer, silent, expr, script, unique, special
  lhs: left hand side, the key sequence
  rhs: the right hand side, what to run
       need to add a <CR> or <Enter> or <Return> if use
       a : command or will be left in command mode

  nmap     : macros
             ex:
               nmap <silent> <C-n> <Esc>:call ToggleHLSearch()<CR>
  ______________________________
  autocmd
  syntax: [autocmd] [events] [pattern] [command]
    events: comma delimited list of events
      BufNewFile    : open a new file
      BufWritePre   : before a write
      BufRead       : open an existing file
      FileType      : whenever filetype is set
          ie: python, javascript, html, etc
      BufReadCmd    : before starting to edit a new buffer
    pattern: filename pattern
    command: command to run
  note: autocmds are run whenever file is sourced
  thus duplicates will be created
  can use augroups:
      augroup groupname
      autocmd!
      autocmd commands
      augroup END
  enter groupe, autocmd! clears everything in that group
  and then runs the commands

##############################
#1.4::functions
##############################
  winwidth(0) return current width
  winheight(0) return current height
  repeat("str", count): return repeated string

