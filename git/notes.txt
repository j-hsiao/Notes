------------------------------
contents
------------------------------
1::spec
2::basics


------------------------------
1::spec
------------------------------
______________________________
pathspecs
    rules
        paths match itself
        scope is limited to directory up to the last slash
        rest of pathspec = for pattern matching


        examples:
            d1/*.jpg
                any .jpg under d1 directory tree
                including:
                    d1/im1.jpg
                    d1/d2/im2.jpg

        magic signature
            short:
                :sig:pathmatcher
            long:
                :(magic,words,comma,delimited)pathmatcher

            ______________________________
            terms:
                top      (/), pathspec is from top of git tree
                exclude  (^ or !), ignore paths
                literal  treat * and ? as literal
                icase    case insensitive


        notes:
            generally can add -- to delimit the start of pathspecs
______________________________
refspecs
    format:
        [+]<src>:<dst>
        
        +: update even if not fast-forward
        src: source file
        dst: local file path
    example:
        git push origin master:refs/heads/master
            push local master to origin master

        git push origin :refs/heads/master
            push nothing (delete) origin master

______________________________
other
    tags:
        refs/tags/<tagname>
    heads:
        refs/heads/<headname>




------------------------------
2::basics
------------------------------
clone a repo
    git clone uri

checkout
    git checkout [branchname]
        checkout branch from repo (use git branch -a to see repo branches too)
    git checkout -b [newbranch]
        create/checkout branch
    git checkout [branchname] -- [path-to-filename]
        checkout file

branch
    git branch -a:
        display all branches
    git branch -d [name]
        delete branch

    
diff
    git diff -- [path-to-file]
        difference between file current and since last stage
        (so git reset if want to see dif since last commit)
    git diff --cached [commit] [--] [path]
        diff between staged changes for next commit and [commit] (defaults to head)
    git diff commit -- path
        dif between cur state and commit (not staged necessarily)
    git diff commit commit -- path
        dif between path for the two commits


reflog:
    shows hashes for previous commits/checkouts etc

reset:
    git reset --hard 'hash/string_thing'
        reset all files to state from corresponding commit
    git reset
        unstage commits

pull changes from repo (fetch & merge)
    git pull [remote] [local]
    
push changes to repo
    git push [remote] [local]

tags:
    creation:
        git tag -a [tagname] -m 'tag message/description'
    display:
        git tag -n
    pull tags:
        git fetch --tags
    push tags:
        git push origin [tagname]
    

